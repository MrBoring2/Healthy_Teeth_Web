@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using Shared.Models
@using System.ComponentModel.DataAnnotations
@using WebSite.Providers
@layout LoginLayout
@inject NavigationManager _navigation
@inject CustomStateProvider _authStateProvider
@inject IJSRuntime JsRuntime


<RadzenLayout class="d-flex align-center justify-content-center" Style="height:100vh;">
    <RadzenTemplateForm Data="@loginModel" Submit="@((LoginModel model) => { Authenticate(); })" class="d-flex justify-content-center align-items-center rz-mb-8">
        <RadzenStack AlignItems="AlignItems.Center">
            <RadzenCard Style="width: 100%; max-width: 1000px;">
                <RadzenText TextStyle="TextStyle.H4" TextAlign="TextAlign.Center">Авторизация</RadzenText>
                <RadzenFormField Text="Логин" Style="width: 100%;">
                    <RadzenTextBox @bind-Value="@loginModel.Login" />
                </RadzenFormField>
                <RadzenFormField Text="Пароль" Style="width: 100%;">
                    <RadzenTextBox @bind-Value="@loginModel.Password" />
                </RadzenFormField>
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-mt-8 rz-mb-4">
                    <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Text="Войти" />
                </RadzenStack>
            </RadzenCard>
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenLayout>

@code {
    private string ErrorMessage { get; set; }
    private EditContext EditContext { get; set; }
    /// <summary>
    /// User name
    /// </summary>
    LoginModel loginModel = new LoginModel();
    string message = string.Empty;
    bool isDisabled = false;
    public Login()
    {
        EditContext = new EditContext(this);
    }
    private async void Authenticate()
    {
        if (!EditContext.Validate())
            return;
        var result = await _authStateProvider.LoginAsync(loginModel);
        if (result.Success)
        {
            _navigation.NavigateTo("/");
        }
        else
        {
            StateHasChanged();
        }
    }
}