@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using Shared.Models
@using System.ComponentModel.DataAnnotations
@using WebSite.Providers
@inject NavigationManager _navigation
@inject CustomStateProvider _authStateProvider
@inject IJSRuntime JsRuntime
<h3>Login</h3>

<p>@message</p>

<div id="login">
    <div class="container">
        <!-- Title -->
        <div class="row">
            <div class="col-sm">
                <h1>Login</h1>
            </div>
        </div>
        <div class="row">
            <EditForm EditContext="@EditContext" OnSubmit="@Authenticate">
                <DataAnnotationsValidator />

                <!-- User -->
                <div class="form-group">
                    <label for="userName">User</label>
                    <InputText id="userName" class="form-control" @bind-Value="@UserName" />
                    <ValidationMessage For="@(() => UserName)" />
                </div>
                <!-- Password -->
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText type="password" id="password" class="form-control" @bind-Value="@Password" />
                    <ValidationMessage For="@(() => Password)" />
                </div>
                <!-- Action -->
                <button type="submit" class="btn btn-primary">Login</button>
            </EditForm>
        </div>
        <!-- Error -->
        <div class="row mt-1">
            <label>@ErrorMessage</label>
        </div>
    </div>
</div>

@code {
    private string ErrorMessage { get; set; }
    private EditContext EditContext { get; set; }
    /// <summary>
    /// User name
    /// </summary>
    [Required]
    public string UserName { get; set; }
    /// <summary>
    /// Password
    /// </summary>
    [Required]
    public string Password { get; set; }
    string message = string.Empty;
    bool isDisabled = false;
    public Login()
    {
        EditContext = new EditContext(this);
    }
    private async void Authenticate()
    {
        if (!EditContext.Validate())
            return;

        var loginRequest = new LoginModel
            {
                Login = UserName,
                Password = Password
            };

        var result = await _authStateProvider.LoginAsync(loginRequest);
        if (result.Success)
        {
            Console.WriteLine(result.Login + " " + result.Message + " " + result.Success + " " + result.JwtBearer);
            _navigation.NavigateTo("/");
        }
        else
        {
            StateHasChanged();
        }
    }
}